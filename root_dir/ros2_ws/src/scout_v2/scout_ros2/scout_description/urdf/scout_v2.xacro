<?xml version="1.0"?>

<robot name="scout_v2" 
    xmlns:xacro="http://ros.org/wiki/xacro"
    xmlns:gazebo="http://gazebosim.org">

    <xacro:arg name="robot_namespace" default="scout_ns" />
    <xacro:property name="robot_namespace" value="$(arg robot_namespace)" />

    <xacro:include filename="$(find scout_description)/urdf/scout_wheel.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/depth_cam.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/imu_gps.xacro" />
    <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
    <xacro:include filename="$(find scout_description)/urdf/decorations.urdf.xacro" />
    <!-- Variables -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- Vehicle Geometries -->
    <xacro:property name="base_x_size" value="0.9250000" />
    <xacro:property name="base_y_size" value="0.380000" />
    <xacro:property name="base_z_size" value="0.210000" />

    <xacro:property name="wheelbase" value="0.498" />
    <xacro:property name="track" value="0.58306" />
    <xacro:property name="wheel_vertical_offset" value="-0.0702" />

    <xacro:property name="wheel_length" value="1.1653e-01" />
    <xacro:property name="wheel_radius" value="1.6459e-01" />

    <!-- Velodyne Lidar -->
    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />
    <xacro:arg name="organize_cloud" default="false"/>
    <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />
    
    <link name="${robot_namespace}/base_footprint"/>

    <joint name="${robot_namespace}/base_footprint_joint" type="fixed">
        <parent link="${robot_namespace}/base_footprint" />
        <child link="${robot_namespace}/base_link" />
        <origin xyz="0 0 ${-wheel_vertical_offset + wheel_radius}" rpy="0 0 0" />
    </joint>

    <!-- Base link -->
    <link name="${robot_namespace}/base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find scout_description)/meshes/base_link.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0.008" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
        </collision>
        <collision>
            <origin xyz="0 0 ${base_z_size/6}" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size/6} ${base_y_size*1.65} ${base_z_size/3}"/>
            </geometry>
        </collision>
    </link>
    

    <link name="${robot_namespace}/inertial_link">
        <inertial>
            <mass value="40" />
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>

    <joint name="${robot_namespace}/inertial_joint" type="fixed">
        <origin xyz="0.10 0 ${-wheel_radius/2}" rpy="0 0 0" />
        <parent link="${robot_namespace}/base_link" />
        <child link="${robot_namespace}/inertial_link" />
    </joint>

    <!-- Scout wheel macros -->
    <!-- wheel labeled from 0 to 3, conter-clockwise, starting from front right wheel -->
    <!-- motor 1 and 2 (left side) are mechanically installed in a reversed direction -->
    <xacro:scout_wheel_type1 wheel_prefix="front_left" robot_namespace="${robot_namespace}">
        <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type1 wheel_prefix="front_right" robot_namespace="${robot_namespace}">
        <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type1 wheel_prefix="rear_left" robot_namespace="${robot_namespace}">
        <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type1 wheel_prefix="rear_right" robot_namespace="${robot_namespace}">
        <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type1>

    <ros2_control name="GazeboSystem" type="system">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="${robot_namespace}/front_left_wheel">
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${robot_namespace}/rear_left_wheel">
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${robot_namespace}/front_right_wheel">
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${robot_namespace}/rear_right_wheel">
        <command_interface name="velocity">
          <param name="min">-6</param>
          <param name="max">6</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
    </ros2_control>

    <gazebo>
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <namespace>${robot_namespace}</namespace>
        <robot_param>robot_description</robot_param>
        <robot_param_node>robot_state_publisher</robot_param_node>
        <parameters>$(find scout_description)/config/scout_control.yaml</parameters>
      </plugin>
    </gazebo>
    
    <xacro:depth_cam robot_namespace="${robot_namespace}"/>
    <xacro:imu_gps robot_namespace="${robot_namespace}"/>
    <!-- <xacro:VLP-16 parent="${robot_namespace}/base_link" name="${robot_namespace}/velodyne" topic="/${robot_namespace}/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
      <origin xyz="0.5 0 0.4" rpy="0 0.7825 0" />
    </xacro:VLP-16> -->
    <xacro:scout_decorate />

</robot>